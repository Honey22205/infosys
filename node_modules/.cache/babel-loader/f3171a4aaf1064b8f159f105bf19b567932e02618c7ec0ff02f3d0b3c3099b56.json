{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIT\\\\OneDrive\\\\Desktop\\\\infosts\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Box, Typography, ThemeProvider, createTheme } from '@mui/material';\nimport AccessibilityFeatures from './components/AccessibilityFeatures';\nimport KeyboardNavigation from './components/KeyboardNavigation';\nimport SignLanguageWindow from './components/SignLanguageWindow';\nimport CaptionsWindow from './components/CaptionsWindow';\n\n// Create a theme with high contrast colors for better accessibility\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    mode: 'light',\n    primary: {\n      main: '#1976d2'\n    },\n    secondary: {\n      main: '#dc004e'\n    },\n    background: {\n      default: '#f5f5f5',\n      paper: '#ffffff'\n    }\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\n  }\n});\nconst sampleTutorial = {\n  url: 'https://www.youtube.com/watch?v=ifo76VyrBYo',\n  title: 'Accessible Video Tutorial',\n  captions: 'https://example.com/captions.vtt',\n  transcript: `[00:00] Welcome to this accessible video tutorial.\n[00:05] This video demonstrates various accessibility features.\n[00:10] You can use keyboard shortcuts to control the video playback.\n[00:15] The space bar to play and pause.\n[00:20] Arrow keys to skip forward or backward.\n[00:25] You can also enable captions, sign language interpretation, and visual cues.\n[00:30] These features make the video more accessible to everyone.\n[00:35] Let's explore each feature in detail.\n[00:40] First, let's look at the captions feature.\n[00:45] Press 'C' to toggle captions on and off.\n[00:50] Next, we'll demonstrate sign language interpretation.\n[00:55] Press 'S' to enable sign language interpretation.\n[01:00] Finally, let's explore visual cues.\n[01:05] Press 'V' to toggle visual indicators for audio events.\n[01:10] These features work together to create an inclusive learning experience.\n[01:15] The captions feature provides real-time text of the audio.\n[01:20] Sign language interpretation helps deaf and hard-of-hearing viewers.\n[01:25] Visual cues indicate important audio events on screen.\n[01:30] You can customize the appearance of these features.\n[01:35] Adjust font size, colors, and position as needed.\n[01:40] The transcript is also available for reference.\n[01:45] Press 'T' to show or hide the full transcript.\n[01:50] All these features can be used together or independently.\n[01:55] Choose what works best for your needs.\n[02:00] Thank you for watching this accessible tutorial.`,\n  signLanguageUrl: 'https://example.com/sign-language.mp4',\n  visualCues: [{\n    timestamp: 0,\n    description: 'Welcome music starts with gentle piano melody',\n    type: 'music'\n  }, {\n    timestamp: 5,\n    description: 'Speaker begins introduction with clear, measured speech',\n    type: 'speech'\n  }, {\n    timestamp: 10,\n    description: 'Keyboard shortcut demonstration with distinct key press sounds',\n    type: 'sound'\n  }, {\n    timestamp: 15,\n    description: 'Space bar sound effect with visual highlight',\n    type: 'sound'\n  }, {\n    timestamp: 20,\n    description: 'Arrow key navigation sound with directional indicators',\n    type: 'sound'\n  }, {\n    timestamp: 25,\n    description: 'Feature introduction music with upbeat tempo',\n    type: 'music'\n  }, {\n    timestamp: 30,\n    description: 'Accessibility explanation with emphasis on key points',\n    type: 'speech'\n  }, {\n    timestamp: 35,\n    description: 'Feature demonstration music with clear transitions',\n    type: 'music'\n  }, {\n    timestamp: 40,\n    description: 'Captions feature introduction with example text',\n    type: 'speech'\n  }, {\n    timestamp: 45,\n    description: 'Caption toggle sound with visual feedback',\n    type: 'sound'\n  }, {\n    timestamp: 50,\n    description: 'Sign language feature introduction with interpreter example',\n    type: 'speech'\n  }, {\n    timestamp: 55,\n    description: 'Sign language toggle sound with accessibility icon',\n    type: 'sound'\n  }, {\n    timestamp: 60,\n    description: 'Visual cues introduction with animated examples',\n    type: 'speech'\n  }, {\n    timestamp: 65,\n    description: 'Visual cue toggle sound with screen flash effect',\n    type: 'sound'\n  }, {\n    timestamp: 70,\n    description: 'Closing remarks with gentle fade-out',\n    type: 'speech'\n  }, {\n    timestamp: 75,\n    description: 'Ending music with soft orchestral finish',\n    type: 'music'\n  }, {\n    timestamp: 80,\n    description: 'Credits roll with background music',\n    type: 'music'\n  }, {\n    timestamp: 85,\n    description: 'Final accessibility reminder with gentle chime',\n    type: 'sound'\n  }, {\n    timestamp: 90,\n    description: 'Video ends with fade to black',\n    type: 'sound'\n  }]\n};\nconst App = () => {\n  _s();\n  const [showSignLanguage, setShowSignLanguage] = useState(false);\n  const [showCaptions, setShowCaptions] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const transcript = `\n    [00:00] Welcome to our tutorial on web accessibility\n    [00:05] Today we'll learn about making websites more inclusive\n    [00:10] First, let's understand what web accessibility means\n    [00:15] It's about making websites usable for everyone\n    [00:20] Including people with different abilities\n    [00:25] Let's look at some key principles\n    [00:30] Starting with keyboard navigation\n    [00:35] And proper use of ARIA labels\n    [00:40] Color contrast is also important\n    [00:45] As well as text alternatives for images\n    [00:50] Now let's see these principles in action\n    [00:55] Here's an example of an accessible form\n  `;\n  const handleTimeUpdate = time => {\n    setCurrentTime(time);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h1\",\n          gutterBottom: true,\n          children: \"Accessible Video Tutorial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccessibilityFeatures, {\n          onToggleSignLanguage: () => setShowSignLanguage(!showSignLanguage),\n          onToggleCaptions: () => setShowCaptions(!showCaptions),\n          showSignLanguage: showSignLanguage,\n          showCaptions: showCaptions,\n          onTimeUpdate: handleTimeUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), showSignLanguage && /*#__PURE__*/_jsxDEV(SignLanguageWindow, {\n          isOpen: showSignLanguage,\n          onClose: () => setShowSignLanguage(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), showCaptions && /*#__PURE__*/_jsxDEV(CaptionsWindow, {\n          isOpen: showCaptions,\n          onClose: () => setShowCaptions(false),\n          currentTime: currentTime,\n          transcript: transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(KeyboardNavigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4YwBGGCSceiaiRGpT5bjv4VS4lY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Box","Typography","ThemeProvider","createTheme","AccessibilityFeatures","KeyboardNavigation","SignLanguageWindow","CaptionsWindow","jsxDEV","_jsxDEV","theme","palette","mode","primary","main","secondary","background","default","paper","typography","fontFamily","sampleTutorial","url","title","captions","transcript","signLanguageUrl","visualCues","timestamp","description","type","App","_s","showSignLanguage","setShowSignLanguage","showCaptions","setShowCaptions","currentTime","setCurrentTime","handleTimeUpdate","time","children","maxWidth","sx","my","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onToggleSignLanguage","onToggleCaptions","onTimeUpdate","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/BIT/OneDrive/Desktop/infosts/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { \r\n  Container, \r\n  Box, \r\n  Typography, \r\n  Paper, \r\n  ToggleButton, \r\n  ToggleButtonGroup,\r\n  Stack,\r\n  ThemeProvider,\r\n  createTheme,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport ReactPlayer from 'react-player';\r\nimport HearingIcon from '@mui/icons-material/Hearing';\r\nimport HearingDisabledIcon from '@mui/icons-material/HearingDisabled';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport TranslateIcon from '@mui/icons-material/Translate';\r\nimport AccessibilityFeatures from './components/AccessibilityFeatures';\r\nimport KeyboardNavigation from './components/KeyboardNavigation';\r\nimport SignLanguageWindow from './components/SignLanguageWindow';\r\nimport CaptionsWindow from './components/CaptionsWindow';\r\n\r\n// Create a theme with high contrast colors for better accessibility\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: 'light',\r\n    primary: {\r\n      main: '#1976d2',\r\n    },\r\n    secondary: {\r\n      main: '#dc004e',\r\n    },\r\n    background: {\r\n      default: '#f5f5f5',\r\n      paper: '#ffffff',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  },\r\n});\r\n\r\ninterface VideoTutorial {\r\n  url: string;\r\n  title: string;\r\n  captions: string;\r\n  transcript: string;\r\n  signLanguageUrl?: string;\r\n  visualCues: {\r\n    timestamp: number;\r\n    description: string;\r\n    type: 'sound' | 'music' | 'speech';\r\n  }[];\r\n}\r\n\r\nconst sampleTutorial: VideoTutorial = {\r\n  url: 'https://www.youtube.com/watch?v=ifo76VyrBYo',\r\n  title: 'Accessible Video Tutorial',\r\n  captions: 'https://example.com/captions.vtt',\r\n  transcript: `[00:00] Welcome to this accessible video tutorial.\r\n[00:05] This video demonstrates various accessibility features.\r\n[00:10] You can use keyboard shortcuts to control the video playback.\r\n[00:15] The space bar to play and pause.\r\n[00:20] Arrow keys to skip forward or backward.\r\n[00:25] You can also enable captions, sign language interpretation, and visual cues.\r\n[00:30] These features make the video more accessible to everyone.\r\n[00:35] Let's explore each feature in detail.\r\n[00:40] First, let's look at the captions feature.\r\n[00:45] Press 'C' to toggle captions on and off.\r\n[00:50] Next, we'll demonstrate sign language interpretation.\r\n[00:55] Press 'S' to enable sign language interpretation.\r\n[01:00] Finally, let's explore visual cues.\r\n[01:05] Press 'V' to toggle visual indicators for audio events.\r\n[01:10] These features work together to create an inclusive learning experience.\r\n[01:15] The captions feature provides real-time text of the audio.\r\n[01:20] Sign language interpretation helps deaf and hard-of-hearing viewers.\r\n[01:25] Visual cues indicate important audio events on screen.\r\n[01:30] You can customize the appearance of these features.\r\n[01:35] Adjust font size, colors, and position as needed.\r\n[01:40] The transcript is also available for reference.\r\n[01:45] Press 'T' to show or hide the full transcript.\r\n[01:50] All these features can be used together or independently.\r\n[01:55] Choose what works best for your needs.\r\n[02:00] Thank you for watching this accessible tutorial.`,\r\n  signLanguageUrl: 'https://example.com/sign-language.mp4',\r\n  visualCues: [\r\n    { timestamp: 0, description: 'Welcome music starts with gentle piano melody', type: 'music' },\r\n    { timestamp: 5, description: 'Speaker begins introduction with clear, measured speech', type: 'speech' },\r\n    { timestamp: 10, description: 'Keyboard shortcut demonstration with distinct key press sounds', type: 'sound' },\r\n    { timestamp: 15, description: 'Space bar sound effect with visual highlight', type: 'sound' },\r\n    { timestamp: 20, description: 'Arrow key navigation sound with directional indicators', type: 'sound' },\r\n    { timestamp: 25, description: 'Feature introduction music with upbeat tempo', type: 'music' },\r\n    { timestamp: 30, description: 'Accessibility explanation with emphasis on key points', type: 'speech' },\r\n    { timestamp: 35, description: 'Feature demonstration music with clear transitions', type: 'music' },\r\n    { timestamp: 40, description: 'Captions feature introduction with example text', type: 'speech' },\r\n    { timestamp: 45, description: 'Caption toggle sound with visual feedback', type: 'sound' },\r\n    { timestamp: 50, description: 'Sign language feature introduction with interpreter example', type: 'speech' },\r\n    { timestamp: 55, description: 'Sign language toggle sound with accessibility icon', type: 'sound' },\r\n    { timestamp: 60, description: 'Visual cues introduction with animated examples', type: 'speech' },\r\n    { timestamp: 65, description: 'Visual cue toggle sound with screen flash effect', type: 'sound' },\r\n    { timestamp: 70, description: 'Closing remarks with gentle fade-out', type: 'speech' },\r\n    { timestamp: 75, description: 'Ending music with soft orchestral finish', type: 'music' },\r\n    { timestamp: 80, description: 'Credits roll with background music', type: 'music' },\r\n    { timestamp: 85, description: 'Final accessibility reminder with gentle chime', type: 'sound' },\r\n    { timestamp: 90, description: 'Video ends with fade to black', type: 'sound' }\r\n  ]\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  const [showSignLanguage, setShowSignLanguage] = useState(false);\r\n  const [showCaptions, setShowCaptions] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n\r\n  const transcript = `\r\n    [00:00] Welcome to our tutorial on web accessibility\r\n    [00:05] Today we'll learn about making websites more inclusive\r\n    [00:10] First, let's understand what web accessibility means\r\n    [00:15] It's about making websites usable for everyone\r\n    [00:20] Including people with different abilities\r\n    [00:25] Let's look at some key principles\r\n    [00:30] Starting with keyboard navigation\r\n    [00:35] And proper use of ARIA labels\r\n    [00:40] Color contrast is also important\r\n    [00:45] As well as text alternatives for images\r\n    [00:50] Now let's see these principles in action\r\n    [00:55] Here's an example of an accessible form\r\n  `;\r\n\r\n  const handleTimeUpdate = (time: number) => {\r\n    setCurrentTime(time);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ my: 4 }}>\r\n          <Typography variant=\"h3\" component=\"h1\" gutterBottom>\r\n            Accessible Video Tutorial\r\n          </Typography>\r\n\r\n          <AccessibilityFeatures\r\n            onToggleSignLanguage={() => setShowSignLanguage(!showSignLanguage)}\r\n            onToggleCaptions={() => setShowCaptions(!showCaptions)}\r\n            showSignLanguage={showSignLanguage}\r\n            showCaptions={showCaptions}\r\n            onTimeUpdate={handleTimeUpdate}\r\n          />\r\n\r\n          {showSignLanguage && (\r\n            <SignLanguageWindow\r\n              isOpen={showSignLanguage}\r\n              onClose={() => setShowSignLanguage(false)}\r\n            />\r\n          )}\r\n\r\n          {showCaptions && (\r\n            <CaptionsWindow\r\n              isOpen={showCaptions}\r\n              onClose={() => setShowCaptions(false)}\r\n              currentTime={currentTime}\r\n              transcript={transcript}\r\n            />\r\n          )}\r\n\r\n          <KeyboardNavigation />\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}